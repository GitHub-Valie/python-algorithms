import pandas as pd
import numpy as np
import requests

symbol = 'BTCUSDT'

def sma(arr, window):
    return np.convolve(arr, np.ones(window), 'valid') / window

# Get historical data 'time_open', 'open', 'high', 'low', 'close', 'volume', 'time_close', ... 
historical_data = [
    [1607058900000, '19310.22', '19313.36', '19307.14', '19311.73', '25.278', 1607058959999, '488119.27585', 394, '14.691', '283691.14662', '0'], 
    [1607058960000, '19311.73', '19311.73', '19302.21', '19308.60', '31.332', 1607059019999, '604901.85413', 387, '9.146', '176575.90623', '0'], 
    [1607059020000, '19308.26', '19308.27', '19302.00', '19307.35', '30.570', 1607059079999, '590151.49387', 344, '16.315', '314949.50893', '0'], 
    [1607059080000, '19307.34', '19309.69', '19302.23', '19306.77', '25.284', 1607059139999, '488146.60554', 311, '16.136', '311536.84127', '0'], 
    [1607059140000, '19306.77', '19315.77', '19306.76', '19315.77', '96.390', 1607059199999, '1861532.08412', 446, '90.691', '1751466.40185', '0'], 
    [1607059200000, '19315.76', '19319.83', '19306.96', '19309.99', '150.812', 1607059259999, '2913045.84510', 714, '93.864', '1813159.05318', '0'], 
    [1607059260000, '19309.99', '19312.30', '19305.72', '19307.92', '25.065', 1607059319999, '483998.83079', 281, '6.919', '133603.59813', '0'], 
    [1607059320000, '19307.92', '19307.92', '19296.05', '19300.01', '69.425', 1607059379999, '1339910.56533', 524, '18.881', '364393.15742', '0'], 
    [1607059380000, '19300.01', '19302.84', '19295.00', '19295.02', '39.066', 1607059439999, '753933.57565', 470, '17.561', '338914.31293', '0'], 
    [1607059440000, '19295.01', '19306.43', '19295.00', '19304.22', '26.259', 1607059499999, '506779.63673', 463, '14.234', '274705.50047', '0'], 
    [1607059500000, '19304.21', '19304.22', '19291.39', '19300.07', '100.592', 1607059559999, '1941097.64157', 573, '28.612', '552168.62913', '0'], 
    [1607059560000, '19300.06', '19314.13', '19284.38', '19309.64', '201.152', 1607059619999, '3881695.00656', 769, '108.677', '2097337.44190', '0'], 
    [1607059620000, '19309.63', '19309.63', '19297.00', '19300.98', '59.013', 1607059679999, '1139201.17130', 473, '26.796', '517258.93564', '0'], 
    [1607059680000, '19300.98', '19307.64', '19300.98', '19307.28', '24.362', 1607059739999, '470320.55807', 358, '6.559', '126629.14411', '0'], 
    [1607059740000, '19307.28', '19307.28', '19296.51', '19305.88', '34.531', 1607059799999, '666537.09874', 370, '10.123', '195391.89793', '0'], 
    [1607059800000, '19305.87', '19311.71', '19305.16', '19305.17', '33.921', 1607059859999, '654940.12005', 426, '24.089', '465102.70894', '0'], 
    [1607059860000, '19305.16', '19305.17', '19295.60', '19299.02', '28.791', 1607059919999, '555709.21885', 414, '6.487', '125193.90438', '0'], 
    [1607059920000, '19299.02', '19299.02', '19288.24', '19288.24', '64.353', 1607059979999, '1241658.67109', 594, '12.354', '238360.80161', '0'], 
    [1607059980000, '19288.25', '19300.40', '19286.60', '19297.00', '41.668', 1607060039999, '803972.21901', 491, '20.543', '396381.71858', '0'], 
    [1607060040000, '19297.01', '19297.01', '19271.26', '19279.99', '212.364', 1607060099999, '4094144.90589', 960, '30.168', '581640.94082', '0'], 
    [1607060100000, '19280.00', '19288.97', '19279.94', '19288.96', '87.123', 1607060159999, '1679962.24135', 530, '35.155', '677881.17749', '0'], 
    [1607060160000, '19288.96', '19288.97', '19273.20', '19275.31', '55.379', 1607060219999, '1067680.40927', 484, '8.402', '161988.62370', '0'], 
    [1607060220000, '19275.31', '19286.00', '19275.31', '19281.84', '34.241', 1607060279999, '660173.50547', 377, '19.016', '366624.84088', '0'], 
    [1607060280000, '19281.84', '19284.86', '19277.34', '19278.57', '30.679', 1607060339999, '591491.49388', 383, '8.819', '170032.58744', '0'], 
    [1607060340000, '19278.56', '19290.00', '19276.72', '19283.33', '57.902', 1607060399999, '1116668.05787', 424, '20.340', '392294.26273', '0'], 
    [1607060400000, '19283.32', '19286.97', '19280.07', '19280.35', '42.854', 1607060459999, '826413.81838', 492, '12.963', '249993.46165', '0'], 
    [1607060460000, '19280.01', '19287.31', '19275.53', '19275.88', '49.003', 1607060519999, '944867.00801', 416, '18.327', '353400.16306', '0'], 
    [1607060520000, '19275.88', '19280.51', '19275.00', '19280.51', '30.129', 1607060579999, '580810.54547', 339, '13.665', '263432.44730', '0'], 
    [1607060580000, '19280.51', '19281.91', '19271.02', '19271.02', '41.042', 1607060639999, '791179.39106', 446, '7.261', '139968.75206', '0'], 
    [1607060640000, '19271.02', '19281.16', '19269.30', '19274.73', '93.331', 1607060699999, '1798786.91896', 560, '16.786', '323576.11187', '0'], 
    [1607060700000, '19274.72', '19274.72', '19261.30', '19264.50', '130.522', 1607060759999, '2514765.08714', 681, '39.425', '759629.14315', '0'], 
    [1607060760000, '19265.09', '19268.81', '19261.00', '19262.72', '65.865', 1607060819999, '1268826.84529', 881, '19.934', '384036.37783', '0'], 
    [1607060820000, '19262.73', '19262.73', '19252.37', '19252.37', '142.030', 1607060879999, '2735010.46684', 787, '48.466', '933322.47022', '0'], 
    [1607060880000, '19252.38', '19265.00', '19252.37', '19261.62', '68.083', 1607060939999, '1311319.14644', 497, '48.984', '943482.59676', '0'], 
    [1607060940000, '19261.63', '19267.68', '19260.00', '19267.68', '32.054', 1607060999999, '617460.34085', 424, '17.471', '336556.35794', '0'], 
    [1607061000000, '19267.68', '19267.68', '19260.02', '19263.90', '29.338', 1607061059999, '565143.90881', 415, '8.306', '159994.31554', '0'], 
    [1607061060000, '19263.90', '19264.73', '19239.40', '19248.34', '316.876', 1607061119999, '6099710.20069', 1163, '35.802', '689158.64762', '0'], 
    [1607061120000, '19248.34', '19256.16', '19245.19', '19245.20', '47.133', 1607061179999, '907400.08959', 478, '15.698', '302207.37210', '0'], 
    [1607061180000, '19245.01', '19251.95', '19230.20', '19230.38', '129.147', 1607061239999, '2484635.94033', 792, '40.865', '786268.65693', '0'], 
    [1607061240000, '19230.39', '19232.46', '19214.38', '19222.87', '169.942', 1607061299999, '3266935.75445', 1009, '59.366', '1141170.12624', '0']
]

data = []
closes = []

# Append useful data to a list
for candle in historical_data:
    candle = [
        float(candle[0]),
        float(candle[1]),
        float(candle[2]),
        float(candle[3]),
        float(candle[4]),
        float(candle[5]),
        float(candle[8]),
        float(candle[6])
    ]
    data.append(candle)
    closes.append(candle[4])

sma = sma(
    arr=closes,
    window=10
)

for i in range(len(sma)):
    if round(closes[-i], 2) > round(sma[-i], 2):
        print('Close > SMA')
    else:
        print('Close < SMA')